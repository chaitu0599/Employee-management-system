@model LoginPage.Models.Emp_login
@{
    ViewData["Title"] = "Home Page";
}
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript">
        function preventBack() { window.history.forward(); }
        setTimeout("preventBack()", 0);
        window.onunload = function () { null };
        function newe() {
            location.href = "newe";
        }
    </script>
</head>
<div class="container">
    <center><h1>Employee Login</h1></center>
    <div class="row">
        <div class="col-sm-4"></div>
        <div class="col-sm-4">
            <form class="needs-validation" asp-action="Emplogin" novalidate>
                <div class="form-group">
                    <label class="control-label">Employee Id</label>
                    <input asp-for="empid" class="form-control" type="number" required />
                    <div class="invalid-feedback">Employee id is required.</div>
                </div>
                <div class="form-group">
                    <label class="control-label">Password</label>
                    <input asp-for="Upassword" class="form-control" type="password" required />
                    <div class="invalid-feedback">Password is required.</div>
                </div>
                <div class="form-group">
                    <input class="btn btn-primary" type="submit" value="Login" />
                    <input class="btn btn-primary" type="reset" value="Reset" />
                </div>
                <div class="form-group">
                    <button class="btn btn-secondary" onclick="newe()">New Employee</button>
                </div>
            </form>
            <div class="alert alert-danger alert-dismissible fade show" id="myAlert">
                <button type="button" class="close">&times;</button>
                <strong>Login failed!</strong> The credentials entered are wrong.
            </div>
        </div>
        <div class="col-sm-4"></div>
    </div>
</div>
<script>
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>

@{

    if (TempData["msgl"] != null)
    {
        if (TempData["msgl"].ToString() == "Yes")
        {
            <script>
                window.location.replace("empop")
            </script>
        }
        if (TempData["msgl"].ToString() == "No")
        {
            <script>
                $(document).ready(function () {
                    $("#myAlert").show("slow", function () {
                        $(".close").click(function () {
                            $("#myAlert").alert("close");
                        });
                    });
                });
            </script>
        }
    }
    else
    {
        <script>
            $(document).ready(function () {
                $("#myAlert").hide()
            });
        </script>
    }
    TempData["msgl"] = null;
}